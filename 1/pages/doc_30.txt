Википедия
Материал из Википедии свободной энциклопедии
перенаправлено с
Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии проверенной марта года проверки требует правка
Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии проверенной марта года проверки требует правка
Перейти к навигации
Перейти к поиску
Расширение
тип
Разработчик
Последний выпуск
мая месяца назад
Тип формата
формат файла Шаблонизатор и техническая спецификация
Стандарт ы
Сайт
англ
Медиафайлы на Викискладе
Стиль этой статьи неэнциклопедичен или нарушает нормы литературного русского языка Статью следует исправить согласно стилистическим правилам Википедии
платформенно независимая переносимая и легко расширяемая технология для разработки веб приложений работающая на виртуальной машине позволяет веб разработчикам создавать содержимое состоящее из статических исходных данных которые могут быть оформлены в одном из текстовых форматов или и элементов которые конструируют динамическое содержимое Кроме этого могут использоваться библиотеки тегов а также для внедрения кода в статичное содержимое страниц
Код страницы транслируется в код сервлета с помощью компилятора страниц затем компилируется в байт код после чего сервлет может быть запущен в контейнерах сервлетов страницы загружаются на сервере и управляются из структуры специального который называется Обычно страницы упакованы в файловые архивы и
Содержание
Версии
и
Обзор
Комментарии
Скриптовые элементы
Объявления
Выражения
Скриплеты
Директивы
Директива
Директива
Директива
Действия
Действие
Действие
Действие
Действие
Действие
Действие и действие
Действие
Пример страницы использующей синтаксис
См также
Ссылки
Версии править править код
Начиная с версии разработка происходила в рамках определяет стандарты и а определяет спецификацию В мае года спецификация была выпущена под в рамках декабря года была выпущена спецификация как содержание выпуска
и править править код
Эти версии кардинально отличаются от предыдущих которые воспринимались как ответ на Некоторые основные возможности прошлых версий например возможность разрабатывать библиотеки тегов были убраны или заменены в соответствии с принципом разделения кода и содержимого Так как в больших объёмах исходного кода трудно сориентироваться и отделить контент от самого кода то пришла идея их разделить перенести с помощью тегов таких как Для реализации этой идеи теги разделили на три логические группы директивы скриптовые элементы и действия
править править код
расширяет спецификацию следующим образом
Требуют платформы версии или более поздней
Использует как основу своей семантики
Определяет синтаксис для страниц
Предоставляет проверку страниц на этапе трансляции
Специфицирует очистку библиотеки тегов на этапе прогона
Улучшает контракт обработчика тегов
Предоставляет улучшенную поддержку авторизации страниц
Улучшает поддержку кодировки символов и локализации
Устраняет ограничение из
править править код
Новая версия спецификации дополнена следующей функциональностью
язык выражений позволяет среди прочего создавать разработчикам шаблоны в стиле
Более простой и быстрый способ создавать новые теги с помощью файлов теперь для создания новых тегов не обязательно знать
Удобный способ управления вложенными бинами
Более быстрый и лёгкий способ отображения параметров переменных
аналогично коду
править править код
Включает в себя и
Новая версия поддерживает отложенное исполнение выражений и литеральные выражения а также
Платформа фокусируется на простой разработке с использованием языковых аннотаций которые были введены поддерживает эту цель определением аннотаций для зависимых инъекций в операторах и в контекстных слушателях
Обзор править править код
позволяют отделить динамическую часть страниц от статического Динамическая часть заключается в специальные теги
Имя вашего хоста
страницы имеют расширение и размещаются там же где и обычные страницы Структура таких страниц может состоять из пяти конструкций комментарии скриптовые элементы директивы и действия страница при компиляции преобразуется в сервлет со статическим содержимым которое направляется в поток вывода связанный с методом Поэтому при первом запросе этот процесс может вызвать небольшую задержку Комментарии в документе или программе не являются причиной замедления программы так как транслятор и исполнитель их игнорируют Скриптовые элементы позволяют указать код на языке который впоследствии станет частью конечного сервлета директивы дают возможность управлять всей структурой сервлета а действия служат для задания существующих используемых компонентов а также для контроля над поведением движка Для упрощения работы со скриптами имеются заранее определённые переменные такие как
Пример страницы с использованием всех составляющих
Комментарии править править код
Комментарии используются для пояснения исходного текста программы В страницах комментарии можно разделить на две группы
комментарии исходного кода
комментарии разметки
Комментарии исходного кода отмечаются специальной последовательностью символов в начале и в конце комментария Данный вид комментариев удаляется на этапе компиляции страницы Пример комментария
Отобразит каталог изделий
и актуальную корзину покупателя
Комментарии разметки оформляются в соответствии с правилами языка Данный вид комментариев рассматривается компилятором как статический текст и помещается в выходной документ выражения внутри комментариев исполняются Пример комментария
Дата создания страницы
Скриптовые элементы править править код
Спецификация различает три типа скриптовых элементов
Объявления одна или несколько деклараций
Выражения одно выражение
Скриплеты скриплет
Объявления обычно используются для определения переменных методов внутренних классов и остальных действующих конструкций на уровне класса Выражения становятся аргументами для метода С помощью скриплетов в страницы вкладываются работающие части кода
Объявления править править код
Объявления позволят вам задавать переменные методы внутренние классы и так далее Объявления используются для определения используемых в программе конструкций Так как объявления не осуществляют вывода обычно они используются совместно с выражениями или скриплетами В приведённом в качестве примера фрагменте отображается количество запросов к данной странице с момента загрузки сервера или с момента последнего изменения и перезагрузки сервлета Обратите внимание что в примере мы используем как объявление так и выражение и что внутри конструкции после объявления стоит точка с запятой
Количество обращений к странице с момента загрузки сервера
Выражения править править код
Выражения применяются для того чтобы вставить значения непосредственно в вывод Выражения вычисляются конвертируются в строку и вставляются в страницу Эти вычисления проходят во время выполнения то есть при запросе страницы а потому существует полный доступ к информации о самом запросе
В выражениях можно использовать постоянные переменные вызовы различных методов Все выражения вне зависимости от сложности их содержимого вычисляются в один результат или число страницы полагаются на который берёт любой результат выражения переводит его в тип текстовый и заносит в буферную память Например следующий код служит для отображения даты и времени запроса данной страницы
Текущее время
Имя вашего хоста
Необходимо обратить внимание на три правила
выражения должны в себе содержать выражения
каждое выражение должно содержать только одно выражение
выражения обязаны не заканчиваться точкой с запятой в отличие от объявлений
Скриплеты править править код
Скриплеты дают возможность вставить любой код в метод сервлета который будет создан при обработке страницы позволяя использовать большинство конструкций Скриплеты также имеют доступ к тем же заранее определённым переменным что и выражения Поэтому например для вывода значения на страницу необходимо использовать заранее определённую переменную
Дополнительные данные запроса
Код внутри скриплета вставляется в том виде как он был записан Весь статический текст шаблона до или после скриплета конвертируется при помощи оператора Например следующий фрагмент содержит смешанный текст шаблона и скриплета
Удачного вам дня
Неудачного вам дня
После преобразования скриплета код будет выглядеть следующим образом
Удачного вам дня
Неудачного вам дня
Это означает что скриплеты не обязательно должны содержать завершённые фрагменты и что оставленные открытыми блоки могут оказать влияние на статический вне скриплета
Директивы править править код
страница может послать сообщение соответствующему контейнеру с указаниями действий которые необходимо провести Эти сообщения называются директивами Все директивы начинаются с затем следует название директивы и один или несколько атрибутов со значениями и заканчиваются Директивы в странице приводят к тому что контейнер пошлёт заявку на исполнение определённой службы которая в генерированном документе не объявляется Форму записи директив можно изобразить следующим образом
директива атрибут значение
Вы также можете объединить установку нескольких атрибутов для одной директивы
директива
Существует три основных типа директив которая позволяет вам совершать такие операции как импорт классов изменение суперкласса сервлета и т п которая даёт вам возможность вставить файл в класс сервлета при трансляции файла в сервлет и позволяющий расширить множество тегов своими собственными которые контейнер способен истолковать
Директива править править код
Как можно догадаться из названия данная директива предоставляет атрибуты для страницы Атрибуты определённые в этой директиве внедряются в данную страницу и на все её вложенные статические элементы независимо от того были ли они вставлены с помощью директивы или с помощью действия Форма записи директивы следующая
атрибут значение
В качестве примера приведём следующую запись
Эта директива заявляет что страница импортирует классы из двух пакетов и а потом уточняет размер буферной памяти которая должна быть использована для обработки данной страницы
Далее рассмотрим атрибуты директивы
пакет пакет пакет Позволяет вам задать пакеты которые должны быть импортированы Это единственный атрибут который может использоваться несколько раз в одной директиве В список необходимо включить все классы которые Вы хотите использовать и которые не являются частью исходного набора импортируемых классов Исходный набор содержит и Пример использования атрибута
Данный атрибут предназначен для задания используемого языка программирования По умолчанию принимается значение Этот атрибут необязательно использовать но тем не менее проблема потом может наступить в случае если поставщик контейнера будет использовать другие языки например Пример записи данного атрибута следующий
пакет Задаёт суперкласс родительский класс для генерируемого сервлета Обычно сервлет возникает расширением исходного класса Опытные программисты могут с помощью этого атрибута создавать собственные суперклассы Пример использования этого атрибута может выглядеть следующим образом
Данный атрибут может принимать значение или которые определяют принимает ли участие страница в трансляции Значение истина принимается по умолчанию сигнализирует о том что заранее определённая переменная тип должна быть привязана к существующей сессии если таковая имеется в противном случае создаётся новая сессия к которой и осуществляется привязка Значение ложь определяет что сессии не будут использоваться и попытки обращения к переменной приведут к возникновению ошибки при трансляции страницы в сервлет Пример использования данного атрибута может выглядеть следующим образом
Данный атрибут задаёт объём буферной памяти необходимой для объекта на который ссылается заранее определённая переменная Значение принимаемое по умолчанию зависит от настроек сервера но должно превышать Значение задаётся либо в форме либо Если Вы укажете значение буферной памяти как то сервлет не будет ничего сохранять в буферную память и передаст результат записанный до переменной прямо объекту который предоставляется вместе с объектом Если Вы зададите значение буферной памяти на конкретную величину то будет в эту память сохранять данные в результате чего увеличится производительность В отличие от объекта объект может вызывать исключительные ситуации Исходная величина буферной памяти равна Пример записи данного атрибута может выглядеть следующим образом
Данный атрибут может принимать значения или Значение истина принимаемое по умолчанию устанавливает что при переполнении буферной памяти он автоматически очистится Значение ложь которое крайне редко используется устанавливает что переполнение буфера должно приводить к возникновению исключительной ситуации Обычно атрибуты и устанавливаются вместе в одной директиве При установке значение атрибута установка значения для атрибута недопустима Пример может выглядеть следующим образом
Данный атрибут может принимать значения или Значение истина принимается по умолчанию задаёт нормальный режим выполнения сервлета когда множественные запросы обрабатываются одновременно с использованием одного экземпляра сервлета исходя из соображения что автор синхронизировал доступ к переменным этого экземпляра Значение ложь сигнализирует о том что сервлет должен наследовать однопоточную модель при которой последовательные или одновременные запросы обрабатываются отдельными экземплярами сервлета Другими словами значение приведёт к тому что контейнер может посылать сервлету сразу несколько запросов в то время как при значении контейнер посылает запросы по одному Пример использования выглядит так
информация Задаёт строку которая может быть получена при использовании метода Обычно этот метод возвращает информацию о сервлете например авторе версии и авторских правах Пример записи данного атрибута может выглядеть следующим образом
Автор Пётр Иванович версия
Задаёт страницу которая вызывается в случае возникновения каких либо событий которые не обрабатываются на данной странице Если на странице случится исключение и страница не имеет собственного кода для решения этого исключения то контейнер автоматически передаст управление на которую Вы задали в качестве значения атрибута Пример записи выглядит так
Данный атрибут может принимать значения или Сигнализирует о том может ли эта страница использоваться для обработки ошибок для других страниц или нет По умолчанию принимается значение ложь Пример использования данного атрибута может выглядеть следующим образом
Тип Данный атрибут задаёт тип для вывода и по желанию можно задать кодировку знаков в ответе ответе По умолчанию в качестве значения используется Для наглядности можем использовать следующий пример
Того же результата можно добиться и использованием скриплета
Директива править править код
Эта директива позволяет Вам включать файлы в сервлет в процессе трансляции страницы Использование директивы выглядит следующим образом
относительный
Заданный обычно интерпретируется относительно страницы на которой расположена ссылка но как и при использовании любых других относительных вы можете задать системе положение интересующего вас ресурса относительно домашнего каталога сервера добавив в начало символ Содержимое подключаемого файла обрабатывается как обычный текст и поэтому может включать такие элементы как статический элементы скриптов директивы и действия
Например многие сайты используют небольшую панель навигации на каждой странице В связи с проблемами использования фреймов часто эта задача решается размещением небольшой таблицы сверху или в левой половине страницы код которой многократно повторяется для каждой страницы сайта Директива наиболее естественный способ решения этой задачи избавляющий разработчика от кошмара рутины копирования в каждый отдельный файл Это происходит следующим образом
Тестовая страница
Специфический фрагмент этой страницы
Учтите что поскольку директива подключает файлы в ходе трансляции страницы то после внесения изменений в панель навигации вам потребуется повторная трансляция всех использующих её страниц Что в данном случае является хорошим компромиссом поскольку как правило панель навигации меняется достаточно редко и процесс подключения не теряет своей эффективности Если же подключённые файлы меняются довольно часто вы можете использовать вместо этого действие Это действие подключает файл в процессе обращения к
Директива править править код
Как уже известно в страницах элементы записываются с помощью тегов условных знаков меток марок Множество тегов которые контейнер способен истолковать можно расширить с помощью так называемых библиотек тегов Также к расширенному множеству тегов можно присоединять действия вследствие чего происходит расширение самого языка Теги можно разделить на стандартные и собственные Обобщённый способ записи может выглядеть так
к библиотеке тегов префикс знака
Библиотеку тегов необходимо идентифицировать с помощью адреса уникального идентификатора ресурса может быть как абсолютным так и относительным Уникальный идентификатор ресурса определяет расположение библиотеки тегов который определяет собственные теги этой библиотеки Пример записи директивы
страница может содержать бесконечное количество директив но для каждой директивы необходимо установить различные префиксы которые определяют содержимое библиотеки на странице В качестве префикса можете использовать какой угодно текст слово В то время как директиву можно использовать где угодно на странице все собственные теги которые эти директивы используют должны использоваться за ними
Действия править править код
Действия используют конструкции с синтаксисом для управления работой движка сервлета Вы можете динамически подключать файл многократно использовать компоненты направить пользователя на другую страницу или сгенерировать для Все эти действия детально рассмотрены далее Помните что как и во всём имена элементов и атрибутов регистрозависимы Действия можно разделить на две группы стандартные и созданные собственные что создаёт сам программист Допустимо применение следующих стандартных действий
Объявление аналогичен тегу
Скриптлет аналогичен тегу
Выражение аналогичен тегу
Вывод текста
Поиск или создание нового экземпляра
Установка свойств
Вставить свойство в поток вывода
Подключает файл в момент запроса страницы
Перенаправляет запрос на другую страницу
Добавляет параметры в объект запроса например в элементах
Генерирует код в зависимости от типа используемого браузера который создаёт тег или для
Группирует параметры внутри тега
Указывает содержимое которое будет использоваться браузером клиента если подключаемый модуль не сможет запуститься Используется внутри элемента
Действие править править код
Это действие позволяет загружать для последующего использования на странице Эта возможность позволяет многократно использовать классы не отказываясь при этом от преимуществ предоставляемых сервлетами Помимо того это один из способов исключения большей части обработки из страницы Если перенести обработку из страницы до то потом эти функции можно использовать и в остальных страницах Простейший синтаксис для указания используемого
имя пакет
Как правило это означает создание нового экземпляра объекта класса заданного через и его связь с переменной с именем заданным при помощи Однако можно задать атрибут принимает значения для страницы для запросов для сессий или диалогов для приложения который ассоциирует не только с текущей страницей В таком случае полезно получить ссылки на существующие и действие создаёт экземпляр нового объекта лишь в том случае если не существует ни одного объекта с теми же значениями и Теперь когда у вас есть вы можете изменять его свойства при помощи действия или используя для этого скриплет и явно вызывая метод объекта с именем переменной заданном ранее через атрибут когда вы говорите у этого есть свойство типа с названием вы на самом деле имеете в виду у этого класса есть метод который возвращает данные типа и другой метод которому в качестве параметра передаётся Действие более подробно рассмотрено в следующем разделе но сейчас вы должны запомнить что вы можете либо явно задавать задавая атрибут чтобы получить значение из соответствующего параметра запроса или просто перечислить свойства чтобы получить значения из параметров запроса с теми же именами что и свойства Вы можете получить значения существующих свойств при помощи выражений или скриплетов вызвав соответствующий метод или чаще всего воспользовавшись действием
Класс заданный для должен находиться в обычном каталоге классов сервера а не в части зарезервированной для классов автоматически перезагружаемых после редактирования Например для все используемые классы должны размещаться в каталоге или в файле каталога а не в каталоге
Ниже приведён простой пример загружающий и устанавливающий получающий простой строковый параметр
Многократное использование в
Многократное использование в
Привет
Сообщение
Текст сообщения не задан
Ещё несколько деталей об использовании Простейший способ использовать это использование конструкции
имя пакет
для загрузки а затем использовать и для модификации и получения его свойств параметров Однако существуют ещё два других способа Во первых вы можете использовать формат контейнера а именно
Тело
для того чтобы обеспечить выполнение Тела только в том случае если экземпляр создаётся впервые а не тогда когда находится и используется уже существующий Как обсуждается далее могут совместно использоваться поэтому не каждое выражение приводит к созданию экземпляра нового Во вторых кроме и существуют ещё три других атрибута которые вы можете использовать и Эти атрибуты описаны далее
даёт имя переменной которая ссылается на Если удаётся найти с теми же самыми значениями и то вместо создания нового экземпляра используется ранее созданный объект
задаёт полное имя пакета
задаёт область в которой должен быть доступен Может принимать четыре допустимых значения и По умолчанию принимает значение означающее что доступен только на текущей странице размещается в текущей страницы Значение означает что доступен только для текущего запроса клиента размещается в объекте Значение означает что объект доступен всем страницам на протяжении жизни текущей И наконец значение означает что он доступен всем страницам использующим тот же самый Причина необходимости этого атрибута заключается в том что приводит к созданию нового экземпляра объекта в том случае если нет уже существующего объекта с тем же и Иначе используется уже существующий объект и все элементы или любые другие между тегами игнорируются
указывает тип переменной которая ссылается на объект Должен совпадать с именем класса суперкласса или реализуемого интерфейса Имя переменной задаётся через атрибут
даёт имя которое будет использовано методом Можно задать и и опустить атрибут
Действие править править код
Вы можете использовать для присвоения значений свойствам ранее описанных Вы можете делать это двумя способами Во первых вы можете использовать после но вне элемента так как это показано в примере
В этом случае выполняется независимо от того был ли найден существующий или был создан новый экземпляр Другим вариантом заключается в размещении в теле элемента как это показано в другом примере
При этом выполняется лишь в том случае если был создан новый экземпляр объекта а не тогда когда находится уже существующий Действие допускает применение следующих четырёх атрибутов
этот обязательный атрибут служит для задания свойства которого будут устанавливаться Элемент должен предшествовать использованию элемента
этот обязательный атрибут устанавливает свойство которое вы хотите установить Однако существует частный случай значение означает что все параметры запроса чьи имена совпадают с именами свойств будут переданы соответствующему методу установки свойств
этот необязательный атрибут устанавливает значение свойства Строковые значения автоматически преобразуются в числовые и с использованием стандартного метода соответствующего класса Например значение для свойства или будет конвертировано при помощи метода а значение для свойства или будет конвертировано при помощи метода Вы не можете одновременно использовать атрибуты и но можете вообще их не использовать Ознакомьтесь с описанием атрибута которое представлено ниже
этот необязательный атрибут устанавливает параметр запроса используемый для получения свойства Если в текущем запросе этот параметр отсутствует никаких действий не происходит система не передаёт значение методу устанавливающему свойства Таким образом допустимо использование в свойств по умолчанию переопределяя их лишь в том случае если этого требуют параметры запроса Например следующий фрагмент означает следующее установить свойство в соответствии со значением параметра запроса а если такой параметр в запросе отсутствует никакие действия не выполняются
Если вы не используете ни ни это приравнивается к тому как если бы вы задали имя совпадающее с именем Вы можете применить этот принцип автоматического использования свойств запроса чьи имена совпадают с именами свойств и пойти далее задав в качестве имени свойства и опустив параметры и В этом случае сервер обработает допустимые свойства и параметры запроса на предмет совпадения их с идентичными именами Далее приведён пример в котором используется для создания таблицы простых чисел Если существует параметр в данных запроса он передаётся в свойство Аналогично для
Многократное использование в
Многократное использование в
Несколько
символьных простых чисел
Действие править править код
Этот элемент определяет значение свойства конвертирует его в строку и направляет в поток вывода Для выполнения действия требуется задание двух атрибутов имени которое предварительно задаётся в действии и имя свойства значение которого должно быть определено Далее приведён пример использования этого действия
Количество предметов
Цена за штуку
Действие править править код
Это действие позволяет вставлять содержимое файлов в генерируемую страницу Синтаксис действия
относительный
В отличие от директивы которая вставляет файл на этапе трансляции страницы это действие вставляет файл при запросе страницы Это приводит к некоторой потере эффективности и исключает возможность наличия во вставляемом файле кода но зато даёт существенное преимущество в гибкости
Пример вставки содержимого четырёх файлов в страницу
Новости
Новости
Вот фрагменты наших четырёх самых популярных статей
Действие править править код
Это действие позволяет вам передать запрос другой статической странице сервлету или странице В отличие от действия обработка актуальной страницы заканчивается Оно использует один атрибут который должен содержать относительный и на основании которого упорядочен объект К исходным параметрам запроса передаваемым другой странице с помощью действия можно добавить и другие параметры Значением атрибута может быть как статическое значение так и вычисляемое в процессе запроса что и показано на следующих двух примерах
какое
Также с помощью действия можно передать управление на другую страницу но с условием что перед вызовом этого действия ничего не было записано в выходящую буферную память иначе будет вызвано исключение
Действие и действие править править код
Это действие предоставляет информацию типа название значение Данное действие используется в основном вместе со знакомыми уже действиями и Кроме этого его можно использовать и вместе с действием В остальных случаях использование этого действия не имеет значения Использование с действиями и передаёт новым страницам исходный объект который будет расширен на новые параметры Если Вы зададите новые значения для уже существующих параметров то именно новые значения будут иметь преимущество С помощью действия можно задать сразу несколько параметров
Действие править править код
Это действие позволяет вам вставить элемент или в зависимости от типа используемого браузера необходимый для запуска аплетов использующих Другими словами данное действие служит к генерированию для вложения в страницу Таким же образом можете вставлять для скачивания модулей для от который предоставляет возможность запускать аплеты внутри браузера Форма записи данного действия выглядит следующим образом
файл класса
объект
расположение
список архивов
высота
горизонтальный простор
версия
название компонента
вертикальный простор
ширина
Посмотрим на пример использования данного действия в коде аплета
Да это вкуснее чем просто нарезанный хлеб
Ваш браузер по непонятным причинам не может запустить этот аплет
Пример страницы использующей синтаксис править править код
Заголовок страницы
Заголовок
Текст
В вашей стране неделя начинается с воскресенья
В вашей стране неделя не начинается с воскресенья
См также править править код
Сервлет
Ссылки править править код
Официальная домашняя страница англ
Технология рус
Введение в рус
Перевод руководства по рус
англ
англ
англ
Подборка статей по рус
Технологии
Основные сторонние технологии
История
История версий
История версий
Критика
Свободные реализации
Свойства языка
Байткод
Синтаксис
Модель памяти
Апплеты
Сервлеты
Мидлеты
Скриптовые языки
Конференции
Источник
Категории Форматы файловВеб на спецификацию категории Страницы использующие устаревший тег Страницы с ежедневно очищаемым кэшемПРО ИТ Статьи по алфавитуПРО ИТ Последняя правка в прошлом годуВикипедия Стилистически некорректные статьиВикипедия Статьи с шаблонами недостатков по алфавиту
Навигация
Персональные инструменты
Вы не представились системеОбсуждениеВкладСоздать учётную записьВойти
Пространства имён
СтатьяОбсуждение
русский
Просмотры
ЧитатьТекущая версияПравитьПравить кодИстория
Ещё
Поиск
Навигация
Заглавная страницаСодержаниеИзбранные статьиСлучайная статьяТекущие событияПожертвовать
Участие
Сообщить об ошибкеКак править статьиСообществоФорумСвежие правкиНовые страницыСправка
Инструменты
Ссылки сюдаСвязанные правкиСлужебные страницыПостоянная ссылкаСведения о страницеЦитировать страницуПолучить короткий кодЭлемент Викиданных
Печать экспорт
Скачать как для печати
В других проектах
Викисклад
На других языках
Править ссылки
Эта страница в последний раз была отредактирована декабря в
Текст доступен по лицензии С указанием авторства С сохранением условий в отдельных случаях могут действовать дополнительные условия
Подробнее см Условия использования
зарегистрированный товарный знак некоммерческой организации Фонд Викимедиа
Политика конфиденциальности
Описание Википедии
Отказ от ответственности
Свяжитесь с нами
Кодекс поведения
Разработчики
Статистика
Заявление о куки
Мобильная версия