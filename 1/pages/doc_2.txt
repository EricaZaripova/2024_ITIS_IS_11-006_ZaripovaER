Википедия
Материал из Википедии свободной энциклопедии
Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии проверенной сентября года проверки требуют правок
Текущая версия страницы пока не проверялась опытными участниками и может значительно отличаться от версии проверенной сентября года проверки требуют правок
Перейти к навигации
Перейти к поиску
Эта статья о языке программирования О прикладной платформе на основе данного языка см программная платформа
Не следует путать с
Класс языка
язык мультипарадигменный объектно ориентированный обобщённый процедурный рефлективный
Появился в
Автор
Джеймс Гослинг и
Разработчик
и
Расширение файлов
Выпуск
Испытал влияние
Си Ада Оберон Модула Симула обёртка Вариативная функция аннотация Никлаус Вирт Патрик Нотон и
Повлиял на
Лицензия
Сайт
Медиафайлы на Викискладе
прим строго типизированный объектно ориентированный язык программирования общего назначения разработанный компанией в последующем приобретённой компанией Разработка ведётся сообществом организованным через язык и основные реализующие его технологии распространяются по лицензии Права на торговую марку принадлежат корпорации
Приложения обычно транслируются в специальный байт код поэтому они могут работать на любой компьютерной архитектуре для которой существует реализация виртуальной машины Дата официального выпуска мая года Занимает высокие места в рейтингах популярности языков программирования е место в рейтингах и
Содержание
История создания
Основные особенности языка
История версий
Список нововведений
Список нововведений
Список нововведений
Список нововведений
Список нововведений
Изменения
Изменения
Изменения
Изменения
Изменения
Изменения
Изменения
Изменения
Изменения
Изменения
Классификация платформ
и
и
Применения платформы
Производительность
Основные возможности
Основные идеи
Примитивные типы
Преобразования при математических операциях
Объектные переменные объекты ссылки и указатели
Дублирование ссылок и клонирование
Инициализация переменных
Сборка мусора
Классы и функции
Конструкторы
Статические методы и поля
Завершённость
Абстрактность
Интерфейсы
Маркерные интерфейсы
Шаблоны в
Проверка принадлежности к классу
Обработка ошибок
Пространство имён
Примеры программ
Средства разработки ПО
См также
Примечания
Комментарии
Документация
Источники
Литература
Ссылки
История создания править править код
Джеймс Гослинг
Изначально язык назывался Дуб разрабатывался Джеймсом Гослингом для программирования бытовых электронных устройств Из за того что язык с таким названием уже существовал был переименован в Назван в честь марки кофе которая в свою очередь получила наименование одноимённого острова Ява поэтому на официальной эмблеме языка изображена чашка с горячим кофе Существует и другая версия происхождения названия языка связанная с аллюзией на кофемашину как пример бытового устройства для программирования которого изначально язык создавался В соответствии с этимологией в русскоязычной литературе с конца двадцатого и до первых лет двадцать первого века название языка нередко переводилось как Ява а не транскрибировалось
В результате работы проекта мир увидел принципиально новое устройство карманный персональный компьютер который опередил своё время более чем на лет но из за большой стоимости в долларов не смог произвести переворот в мире технологии и был забыт
Устройство не пользовалось популярностью в отличие от языка программирования и его окружения Следующим этапом жизни языка стала разработка интерактивного телевидения В году стало очевидным что интерактивное телевидение было ошибкой
С середины х годов язык стал широко использоваться для написания клиентских приложений и серверного программного обеспечения Тогда же определённое распространение получила технология апплетов графических приложений встраиваемых в веб страницы с развитием возможностей динамических веб страниц в е годы технология стала применяться редко
В веб разработке применяется для документирования используется утилита
Основные особенности языка править править код
Программы на транслируются в байт код выполняемый виртуальной машиной программой обрабатывающей байтовый код и передающей инструкции оборудованию как интерпретатор
Дюк талисман
Достоинством подобного способа выполнения программ является полная независимость байт кода от операционной системы и оборудования что позволяет выполнять приложения на любом устройстве для которого существует соответствующая виртуальная машина Другой важной особенностью технологии является гибкая система безопасности в рамках которой исполнение программы полностью контролируется виртуальной машиной Любые операции которые превышают установленные полномочия программы например попытка несанкционированного доступа к данным или соединения с другим компьютером вызывают немедленное прерывание
Часто к недостаткам концепции виртуальной машины относят снижение производительности Ряд усовершенствований несколько увеличил скорость выполнения программ на
применение технологии трансляции байт кода в машинный код непосредственно во время работы программы технология с возможностью сохранения версий класса в машинном коде
обширное использование платформенно ориентированного кода код в стандартных библиотеках
аппаратные средства обеспечивающие ускоренную обработку байт кода например технология поддерживаемая некоторыми процессорами архитектуры
По данным сайта для семи разных задач время выполнения на составляет в среднем в полтора два раза больше чем для в некоторых случаях быстрее а в отдельных случаях в раз медленнее С другой стороны для большинства из них потребление памяти машиной было в раз больше чем программой на Также примечательно исследование проведённое компанией согласно которому отмечается существенно более низкая производительность и бо льшее потребление памяти в тестовых примерах на в сравнении с аналогичными программами на
Идеи заложенные в концепцию и различные реализации среды виртуальной машины вдохновили множество энтузиастов на расширение перечня языков которые могли бы быть использованы для создания программ исполняемых на виртуальной машине Эти идеи нашли также выражение в спецификации общеязыковой инфраструктуры заложенной в основу платформы компанией
История версий править править код
Основная статья История версий
Этот раздел нужно проверить на соответствие критериям взвешенности изложения Возможно содержание статьи нарушает принцип взвешенного изложения представляя малозначимые мнения и факты так же как и более важные либо уделяет слишком много места описанию какого то одного аспекта темы в ущерб другим не менее существенным Пожалуйста улучшите её в соответствии с правилами написания статей января
править править код
Разработка началась в году первая официальная версия была выпущена только января года
править править код
Вторая версия была выпущена февраля года
Библиотека
Поддержка технологии
Полная поддержка включая поддержку ввода на японском китайском и корейском языках
Поддержка воспроизведения аудиофайлов нескольких популярных форматов
Полная поддержка технологии
компилятор улучшенная производительность
Усовершенствования инструментальных средств в том числе поддержка профилирования программ
править править код
Дата выпуска декабря года Кодовое имя
В данном случае встречается путаница Выпускались книги например фактически по бывшее название Вместе с тем по сей день такие книги публикуются например Х М Дейтел П Дж Дейтел С И Сантри Технологии программирования на Распределённые приложения
В то время когда была исторически заменена следующими релизами подобные названия книг дезориентируют в понимании о какой же версии они написаны на самом деле Если принято считать за а авторы книг за принимают что приводит к полной путанице
править править код
Дата выпуска мая года Кодовое имя
править править код
Дата выпуска февраля года Кодовое имя
править править код
Спецификация была выпущена сентября года кодовое имя этой версии изменена официальная индексация вместо правильнее называть Внутренняя же индексация осталась прежней Малые изменения теперь включаются без изменения индексации для этого используется слово или буква например Предполагается что в обновления могут входить как исправления ошибок так и небольшие добавления в
В данной версии разработчики внесли в язык целый ряд принципиальных дополнений
Перечислимые типы англ Ранее отсутствовавшие в типы оформлены по аналогии с но при этом имеют ряд дополнительных возможностей
Перечислимый тип является полноценным классом то есть может иметь конструктор поля методы в том числе скрытые и абстрактные
Перечисление может реализовывать интерфейсы
Для перечислений имеются встроенные методы дающие возможность получения значений типа по имени символьных значений соответствующих именам преобразования между номером и значением проверки типа на то что он является перечислимым
Аннотации возможность добавления в текст программы метаданных непосредственно не влияющих на выполнение кода но допускающих использование для получения различных сведений о коде и его исполнении Одновременно выпущен инструментарий для использования аннотированного кода Одно из применений аннотаций упрощение создания тестовых модулей для кода
Средства обобщённого программирования англ механизм аналогичный средствам языков и позже также появились и в принципиально отличаются от шаблонов дающий возможность создавать классы и методы с полями и параметрами произвольного объектного типа С использованием данного механизма реализованы новые версии коллекций стандартной библиотеки
Методы с неопределённым числом параметров
автоматическое преобразование между скалярными типами и соответствующими типами обёртками например между Наличие такой возможности сокращает код поскольку исключает необходимость выполнения явных преобразований типов в очевидных случаях
Разрешён импорт статических полей и методов
В язык введён цикл по коллекции объектов итератор англ
Введено использование комментариев которые используются для автоматического оформления документации по комментариям в исходном коде
править править код
Релиз версии состоялся декабря года кодовое имя Изменена официальная индексация вместо ожидаемой версия значится как Малые изменения как и в вносятся в обычные обновления версии например Внесены следующие изменения
Коллекции добавлены интерфейсы для организации
двухсторонних очередей в том числе блокирующих себя во время ожидания элемента
множеств и словарей организовывающих поиск по ближайшему соответствию
При этом организованы новые классы реализующие перечисленные интерфейсы
Добавлена поддержка японского императорского календаря наряду с уже существующими григорианским и буддийским календарями
Доступны классы потоки для чтения и передачи сжатых данных с возможностью передачи их по сети Сняты ограничения на количество файлов в архиве ранее Кб длину названия файла ранее символов и количество одновременно открытых файлов ранее шт
Организована система управления кэшем и добавлена поддержка параметра в запросе
графический мониторинг стала официально поддерживаемой утилитой
позволяет создать полноценный сервер с минимально необходимыми функциональными свойствами
Повысилась скорость вычислений на скорость операций ввода вывода возросла в два раза
улучшена работоспособность и обработка текста на добавлен для работы с файлами формата
Исправлено большое количество ошибок
править править код
Дата выпуска октября года
вошёл в состав С й версии модуль поставляется отдельно от
править править код
Дата выпуска октября года Кодовое имя
править править код
Релиз версии состоялся июля года кодовое имя В финальную версию не были включены все ранее запланированные изменения Согласно плану развития план Б включение нововведений будет разбито на две части без лямбда исчисления проекта и части улучшений проекта и всё остальное намеченный на конец года
В новой версии получившей название помимо исправления большого количества ошибок было представлено несколько новшеств Так например в качестве эталонной реализации использован не проприетарный пакет а его открытая реализация а сам релиз новой версии платформы готовился при тесном сотрудничестве инженеров с участниками мировой экосистемы комитетом и сообществом Все поставляемые бинарные файлы эталонной реализации собраны на основе кодовой базы сама эталонная реализация полностью открыта под лицензией с исключениями разрешающими динамическое связывание с проприетарными продуктами К другим нововведениям относятся
интеграция набора небольших языковых улучшений развиваемых в рамках проекта
добавлена поддержка языков программирования с динамической типизацией таких как и
поддержка загрузки классов по
обновлённый стек включающий и и другие
За дней до выхода релиза было обнаружено несколько серьёзных ошибок в горячей оптимизации циклов которая включена по умолчанию и приводит виртуальную машину к краху Специалисты найденные ошибки за столь короткий срок исправить не могли но пообещали что они будут исправлены во втором обновлении и частично в первом
Список нововведений править править код
Поддержка динамически типизированных языков расширение семантики байт кода языка для поддержки динамически типизированных языков
Строгая проверка файлов файлы версии или более поздней версии должны быть проверены верификатором не должна переключаться на старый верификатор
Изменение синтаксиса языка частичные изменения в языке предназначенные для упрощения общих задач программирования
Использование класса док в блоке
Закрытие используемых ресурсов в блоке работает при использовании интерфейса док
Объединённая обработка исключений в блоке перечисление обрабатываемых исключений в
Повторное выбрасывание исключений передача возникшего исключения вверх по стеку вызовов
Подчёркивания в числовых литералах для лучшего восприятия больших чисел
Изменение вывода типа в при создании объекта
Использование двоичных чисел префикс укажет что используется двоичное число
Упрощение вызова методов уменьшение предупреждений при вызове метода с переменным числом входящих переменных
Модификация загрузчика классов избежание тупиковых ситуаций в неиерархической топологии загрузки классов
Закрытие ресурсов открытых док
Обновление коллекций
Поддержка
Отделение языка пользователя и языка пользовательского интерфейса обновление обработки языков для отделения локали от языка пользовательского интерфейса
Новые интерфейсы для платформы
Использование и
не закончено
править править код
Релиз версии состоялся марта года Кодовое имя
Список нововведений править править код
Полноценная поддержка лямбда выражений
Ключевое слово в интерфейсах для поддержки функциональности по умолчанию
Статические методы в интерфейсах
Ссылки на методы и конструкторы
Функциональные интерфейсы предикаты поставщики и т д
Потоки для работы с коллекциями
Новый для работы с датами
не закончено
править править код
В связи со сложностями в реализации модульной системы в рамках проекта релиз версии первоначально запланированный сентября года несколько раз откладывался сначала дата была перенесена на марта года потом на июля года а затем на сентября года
Последняя дата стала официальной датой релиза версии
Список нововведений править править код
Интеграция в рамках которого разработана модульная система для платформы и применена к
Обновление для улучшения взаимодействия с процессами операционной системы Обновление мотивировано тем что разработчикам зачастую приходилось писать платформозависимый код для таких задач
Временно экспериментальный новый клиент с поддержкой и веб сокетов предназначен заменить устаревший класс док
Сжатые строки если содержимое строки позволяет она может кодироваться в один байт на символ выбор кодировки конкретного экземпляра класса отображается в значении переменной флага которая теперь есть у всех строк
Поддержка указанных в алгоритмов хеширования кроме и Алгоритмы использования в качестве основы для других криптографических функций не реализованы в силу отсутствия соответствующих стандартов
Улучшены средства для пометки устаревшего В аннотацию добавлен параметр позволяющий указывать версию программы с которой использование отмеченного элемента не рекомендуется а также параметр позволяющий указать что запланировано удаление элемента в какой либо из будущих версий
методы в интерфейсах
Поддержка на
править править код
Дата релиза марта года
Список нововведений править править код
Официальный частичный список нововведений и план релиза расположен на сайте
Вывод типов локальных переменных помеченных с помощью ключевого слова
Создание прозрачного интерфейса сборщика мусора для упрощения разработки новых сборщиков
Уменьшено время задержек многопоточного сборщика мусора за счёт реализации параллельного полного цикла сборки мусора
Возможность выполнять функции обратного вызова на потоках не делая глобальных блокировок в рамках всех потоков
Поддержка символов из новых расширений тип валюты первый день недели двухбуквенные коды стран и регионов часовой пояс
теперь может выделять память кучи для объектов на альтернативных устройствах оперативной памяти в том числе тех которые обладают энергонезависимой памятью как например накопители
Новый экспериментальный компилятор предоставляющий возможности компиляции по умолчанию отключён работает только на
Обновление системы нумерации версий и с целью приближения к схеме управления версиями по времени
править править код
Официальный частичный список нововведений и план релиза расположен на сайте Дата релиза сентября года
Список нововведений править править код
Обновление системы управления доступом позволяющее вложенным классам обращаться к закрытым методам и полям внешнего класса и наоборот без необходимости создания компилятором промежуточных методов с повышением уровня доступа
новый сборщик мусора собственно сборкой мусора не занимающийся вообще при использовании превышение предела выделяемой памяти приводит к завершению работы
Стандартизирован клиент с поддержкой введённый в как экспериментальный
Параметры лямбда функций могут быть неявно типизированы путём вывода типов через ключевое слово для унификации с синтаксисом локальных переменных введённым в
Поддержка й версии стандарта
Поддержка протокола
Экспериментальный масштабируемый сборщик мусора с низкими задержками По умолчанию отключён работает только на
править править код
Дата релиза марта года
Изменения править править код
блок может использоваться в выражениях присваивания значения переменной
добавлена поддержка й версии стандарта
сборщик мусора добавлена поддержка выгрузки классов
сборщик мусора добавлена экспериментальная возможность размещения старого поколения кучи на альтернативных модулях памяти например
в классе добавлена поддержка компактного вывода больших чисел например
устранены некоторые неиспользумые или признанные устаревшими классы и или их методы например класс из пакета методы в классах и
править править код
Дата релиза сентября года
Изменения править править код
в блоках добавлена возможность использования ключевого слова возвращающего указанное за ним значение
для компактной записи строковых констант введена экспериментальная возможность работы с текстовыми блоками обрамлённых тройками двойных кавычек
в классе пакета добавлены новые реализации метода
методы класса пакета пересылают данные вне зависимости от текущей позиции в буфере передачи
добавлена поддержка
сборщик мусора возвращает более неиспользуемую память кучи ОС при этом максимальный поддерживаемый размер памяти кучи увеличен до ТБ
в добавлена возможность чтения приватных ключей в формате англ
для исключена поддержка стиля оформления
править править код
Дата релиза марта года
Изменения править править код
экспериментально введено ключевое слово для обозначения неизменяемых классов являющихся контейнерами неизменяемых данных записей
введено сопоставление шаблонов для оператора в блоках
в метках блоков могут использоваться стрелочные операторы
исключён сборщик мусора
методы и классов и признаны устаревшими
править править код
Дата релиза сентября года
Изменения править править код
добавлена экспериментальная возможность использования запечатанных классов интерфейсов при объявлении которых с помощью нового ключевого слова можно указывать какие классы интерфейсы могут наследовать данный запечатанный класс интерфейс
добавлена возможность использования скрытых классов которые не могут использоваться непосредственно байт кодом или другими классами
в синтаксис языка официально введена экспериментально добавленная в возможность работы с текстовыми блоками
добавлена поддержка
в классе добавлен метод
в классе добавлена возможность перегрузки методов
править править код
Дата релиза марта года
Изменения править править код
в синтаксис языка официально введены экспериментально добавленные в возможности работы с записями и использования в блоках
добавлен предназначенный для замены механизма
добавлен позволяющий приложениям эффективно и безопасно использовать память вне кучи
добавлено динамическое освобождение области памяти в которой хранится статическая информация приложения метаданные загруженных классов и возвращение освобождённой памяти ОС
в добавлена поддержка алгоритма
в классах и пакета добавлена поддержка использования сокетов домена
добавлено свойство позволяющее задать максимальный размер сообщения рукопожатия для протоколов
в интерфейс добавлен метод позволяющий преобразовывать поток в список
добавлен предназначенный для использования возможностей векторного исчисления
методы класса признаны устаревшими
сборщик мусора может производить одновременную обработку стеков разных потоков
сборщик мусора может одновременно освобождать память занимавшуюся разными потоками
править править код
Дата релиза сентября года
Изменения править править код
в синтаксис языка официально введена экспериментально добавленная в возможность работы с запечатанными классами интерфейсами
экспериментально расширена возможность использования блоков в них можно выполнять разные действия в зависимости от того к какому классу относится указанный объект т е метки могут быть именами классов
в генераторах псевдослучайных чисел пакет добавлены новые алгоритмы методы генерации
добавлен позволяющий приложениям взаимодействовать с кодом и данными вне среды выполнения
в классе пакета добавлен метод возвращающий используемый консолью набор символов
добавлено новое системное свойство позволяющее узнать обозначение наименование кодировки символов базовой среды хоста
в пакет добавлен интерфейс позволяющий получать информацию о текущем моменте времени
в пакет добавлен класс позволяющий преобразовывать числа шестнадцатеричной системы счисления в числа других систем счисления или строки и обратно
в
добавлена возможность использования нового конвейера рендеринга графики
интерфейс пакета расширен для возможнсти получения доступа к дополнительным атрибутам файлов
в классе пакета добавлен метод позволяющий загружать иконки высокого качества разрешения
в классе пакета добавлены методы и предназначенные соответственно для присоединения к группе многоадресной рассылки или выхода из нее
исключён механизм активации
в виртуальной машине исключён код компилятора
править править код
Дата релиза марта года
Изменения править править код
во всех кодировка по умолчанию изменена на
добавлена утилита простого веб сервера запускаемая из командной строки
улучшена безопасность при использовании методов рефлексии
добавлен интерфейс поставщика услуг для имени хоста и разбора сетевого адреса
интерфейс пакета расширен новыми методами и которые используются для создания новых файлов на основании указанных исходных файлов интерфейс пакета использует эти методы при создании новых файлов в той же манере
в класс пакета добавлена перегрузка метода вторым аргументом которого может указываться наименование резервной кодировки на случай отсутствия в системе или невозможности определения запрашиваемой первым аргументом
признаны устаревшими
механизмы финализации методы разных классов
метод класса
в сборщике мусора максимальный размер обрабатываемых регионов кучи увеличен с до Мб
в сборщиках мусора добавлена поддержка дедупликации
править править код
Дата релиза сентября года
Изменения править править код
добавлены экспериментальные возможности
работы с виртуальными потоками
проверки является ли передаваемый методу объект записью
добавлена поддержка
в потоках вывода и добавлены новые свойства и соответственно которые определяют кодировку символов потока
добавлена поддержка токенов привязки каналов при аутентификации по протоколам через
в классах и пакета добавлены новые возможности определения форматов времени и дат
в классах добавлены статические методы позволяющие создавать новые хэш таблицы
в классе пакета добавлены методы и позволяющие соответственно получать и задавать схемы проверки электронных цифровых подписей при соединениях по протоколам
изменено действие методов класса
методы и не делают ничего
метод всегда возвращает
методы и всегда выбрасывают исключение
конструкторы класса пакета признаны устаревшими вместо них рекомендуется использовать статический метод
править править код
Дата релиза марта года
Изменения править править код
при работах с потоками введена экспериментальная возможность использования ограниченных значений параметризованный класс которые могут эффективно и безопасно использоваться разными потоками
добавлена поддержка
в классе пакета добавлены методы и позволяющие в приоритетном порядке настраивать списки групп алгоритмов обмена ключами при соединениях по протоколам
изменено действие методов и класса они всегда выбрасывают исключение
признаны устаревшими
конструкторы класса пакета вместо них рекомендуется использовать новый статический метод этого класса или методы класса из того же пакета
используемые в апплетах классы пакета
в сборщике мусора улучшена параллельная обработка потоков
править править код
Дата релиза сентября года
Изменения править править код
в синтаксис языка официально введены ранее экспериментально добавленные возможности
расширения использования блоков в них можно выполнять разные действия в зависимости от того к какому классу относится указанный объект т е метки могут быть именами классов с
проверки является ли передаваемый методу объект записью с
работы с виртуальными потоками с
добавлены параметризованные интерфейсы для работы с коллекциями в которых чётко определён порядок следования элементов
добавлен механизм обеспечения надёжной работы с симметричными криптосистемами
добавлены экспериментальные возможности работы
со строковыми шаблонами в которых могут использоваться текстовые блоки
безымянными шаблонами и переменными обозначемыми символом
с безымянными классами внутри файла можно без определения имени класса записать определение метода
класс пакета теперь реализует интерфейс
в классы пакета и добавлены методы возвращающие строковые массивы состоящие как из обычных символов так и символов разделителей
в классах и добавлены методы возвращающие повторённые указанное число раз последовательности символов
в классе добавлены новые методы работы с символами эмодзи
в классе удалён метод
удалён класс
в сборщике мусора добавлена раздельная обработка объектов молодого и старого поколений
Классификация платформ править править код
Внутри существует несколько основных семейств технологий
основное издание содержит компиляторы подходит для создания пользовательских приложений в первую очередь для настольных систем
ранее представляет собой набор спецификаций для создания программного обеспечения уровня предприятия В м проект был передан и тогда же его наименование изменилось на текущее Модули удалены из начиная с й версии
создана для использования в устройствах ограниченных по вычислительной мощности например в мобильных телефонах КПК встроенных системах
технология предоставляет безопасную среду для приложений работающих на смарт картах и других устройствах с очень ограниченным объёмом памяти и возможностями обработки
и править править код
Компанией была разработана собственная реализация под названием англ рус включавшаяся в состав различных операционных систем начиная с также входила в от версии и выше что позволяло использовать в ОС и после установки на данные ОС
имела существенные отличия от во многом ломающие основополагающую концепцию переносимости программ между разными платформами
отсутствие поддержки программного интерфейса вызова удалённых методов
отсутствие поддержки технологии
наличие нестандартных расширений таких как средства интеграции и работающих только на платформе
Тесная интеграция с и поставила под вопрос кроссплатформенную парадигму языка Впоследствии это явилось поводом для судебных исков со стороны к Суд принял сторону компании В конечном счёте между двумя компаниями была достигнута договорённость о возможности продления срока официальной поддержки пользователей нестандартной до конца года
В году компанией для платформы был представлен подобный язык не соответствующий официальной спецификации языка и исключённый впоследствии из стандартного инструментария разработчика начиная с
и править править код
Основная статья
Язык активно используется для создания мобильных приложений под операционную систему При этом программы компилируются в нестандартный байт код для использования их виртуальной машиной начиная с виртуальная машина заменена на Для такой компиляции используется дополнительный инструмент а именно разработанный компанией
Разработку приложений можно вести в среде в среде
Применения платформы править править код
Следующие успешные проекты реализованы с привлечением технологий
Следующие компании в основном фокусируются на технологиях В частности СУБД включает как свою составную часть обеспечивающую возможность непосредственного программирования СУБД на языке включая например хранимые процедуры
Производительность править править код
Программы написанные на имеют репутацию более медленных и занимающих больше оперативной памяти чем написанные на языке Тем не менее скорость выполнения программ написанных на языке была существенно улучшена с выпуском в годах так называемого компилятора в версии в дополнение к другим особенностям языка для поддержки лучшего анализа кода такие как внутренние классы класс док упрощённые логические вычисления и так далее Кроме того была произведена оптимизация виртуальной машины с года для этого используется виртуальная машина По состоянию на февраль года код приблизительно в раза медленнее кода написанного на языке Си
Некоторые платформы предлагают аппаратную поддержку выполнения для К примеру микроконтроллеры выполняющие код на аппаратном обеспечении вместо программной а также основанные на процессоры которые поддерживают выполнение байт кода через опцию
Основные возможности править править код
Автоматическое управление памятью
Расширенные возможности обработки исключительных ситуаций
Богатый набор средств фильтрации ввода вывода
Набор стандартных коллекций массив список стек и т п
Наличие простых средств создания сетевых приложений в том числе с использованием протокола
Наличие классов позволяющих выполнять запросы и обрабатывать ответы
Встроенные в язык средства создания многопоточных приложений которые потом были портированы на многие языки например
Унифицированный доступ к базам данных
на уровне отдельных запросов на основе
на уровне концепции объектов обладающих способностью к хранению в базе данных на основе и
Поддержка обобщений начиная с версии
Поддержка лямбд замыканий встроенные возможности функционального программирования с
Основные идеи править править код
Примитивные типы править править код
В языке только примитивных скалярных простых типов Существует также вспомогательный девятый примитивный тип однако переменные и поля такого типа не могут быть объявлены в коде а сам тип используется только для описания соответствующего ему класса для использования при рефлексии например с помощью класса док можно узнать является ли определённый метод типа
Длины и диапазоны значений примитивных типов определяются стандартом а не реализацией и приведены в таблице Тип сделали двухбайтовым для удобства локализации один из идеологических принципов когда складывался стандарт уже существовал но не Поскольку в результате не осталось однобайтового типа добавили новый тип причём в в отличие от других языков он не является беззнаковым Типы и могут иметь специальные значения
и не число Для типа они обозначаются для типа так же но с приставкой вместо Минимальные и максимальные значения принимаемые типами и тоже стандартизованы
Тип
Длина в байтах
Диапазон или набор значений
в массивах в переменных
или
или
или
или примерно
или примерно а также
или примерно а также
Такая жёсткая стандартизация была необходима чтобы сделать язык платформенно независимым что является одним из идеологических требований к Тем не менее одна небольшая проблема с платформенной независимостью всё же осталась Некоторые процессоры используют для промежуточного хранения результатов байтовые регистры или другими способами улучшают точность вычислений Для того чтобы сделать максимально совместимой между разными системами в ранних версиях любые способы повышения точности вычислений были запрещены Однако это приводило к снижению быстродействия Выяснилось что ухудшение точности ради платформенной независимости мало кому нужно тем более если за это приходится платить замедлением работы программ После многочисленных протестов этот запрет отменили но добавили ключевое слово запрещающее повышение точности Начиная с запрет на повышение точности снова начал действовать а ключевое слово было объявлено устаревшим
Преобразования при математических операциях править править код
В языке действуют следующие правила
Если один операнд имеет тип другой тоже преобразуется к типу
Иначе если один операнд имеет тип другой тоже преобразуется к типу
Иначе если один операнд имеет тип другой тоже преобразуется к типу
Иначе оба операнда преобразуются к типу
Данный способ неявного преобразования встроенных типов полностью совпадает с преобразованием типов в Си
Объектные переменные объекты ссылки и указатели править править код
В языке имеются только динамически создаваемые объекты Переменные объектного типа и объекты в совершенно разные сущности Переменные объектного типа являются ссылками то есть аналогами указателей на динамически создаваемые объекты Это подчёркивается синтаксисом описания переменных Так код на может выглядеть следующим образом
Но то же самое на будет выглядеть совсем по другому
При присваиваниях передаче в подпрограммы и сравнениях объектные переменные ведут себя как указатели то есть присваиваются копируются и сравниваются адреса объектов А при доступе с помощью объектной переменной к полям данных или методам объекта не требуется никаких специальных операций разыменовывания этот доступ осуществляется так как если бы объектная переменная была самим объектом
Объектными являются переменные любого типа кроме примитивного Явных указателей в нет В отличие от указателей и других языков программирования ссылки в в высокой степени безопасны благодаря жёстким ограничениям на их использование
Нельзя преобразовывать объект типа или любого другого примитивного типа в указатель или ссылку и наоборот
Над ссылками запрещено выполнять операции или любые другие арифметические и логические операции
Преобразование типов между ссылками жёстко регламентировано За исключением ссылок на массивы разрешено преобразовывать ссылки только между наследуемым типом и его наследником причём преобразование наследуемого типа в наследующий должно быть явно задано а во время выполнения производится проверка его осмысленности Преобразования ссылок на массивы разрешены лишь тогда когда разрешены преобразования их базовых типов а также нет конфликтов размерности
В нет операций взятия адреса или взятия объекта по адресу Амперсанд означает всего лишь побитовое и двойной амперсанд логическое и Однако для булевых типов одиночный амперсанд означает логическое и отличающееся от двойного тем что цепь проверок не прекращается при получении в выражении значения Например не повлечёт вызовов и в случае если тогда как использование повлечёт в любом случае
Благодаря таким специально введённым ограничениям в невозможно прямое манипулирование памятью на уровне физических адресов хотя определено значение ссылки не указывающей ни на что
Если нужен указатель на примитивный тип используются классы обёртки примитивных типов
Дублирование ссылок и клонирование править править код
При присваивании не происходит копирования объекта так как объектные переменные ссылочные Так если написать
то произойдёт копирование адреса из переменной в переменную То есть и будут указывать на одну и ту же область памяти то есть на один и тот же объект попытка изменить поля объекта на который ссылается переменная будет менять объект с которым связана переменная и наоборот Если же необходимо получить именно ещё одну копию исходного объекта пользуются или методом функцией членом в терминологии создающим копию объекта или реже копирующим конструктором конструкторы в не могут быть виртуальными поэтому экземпляр класса потомка будет неправильно скопирован конструктором класса предка метод клонирования вызывает нужный конструктор и тем самым позволяет обойти это ограничение
Метод док требует чтобы класс реализовывал интерфейс док Если класс реализует интерфейс по умолчанию копирует все поля мелкая копия Если требуется не копировать а клонировать поля а также их поля и так далее надо переопределять метод Определение и использование метода часто является нетривиальной задачей
Инициализация переменных править править код
Все переменные или требуют явного определения или автоматически заполняются нулями Таким образом исчезают гейзенбаги связанные со случайным использованием неинициализированной памяти характерные для низкоуровневых языков вроде Си
Сборка мусора править править код
В языке невозможно явное удаление объекта из памяти вместо этого реализована сборка мусора Традиционным приёмом дающим сборщику мусора намёк на необходимость освобождения памяти является присваивание переменной пустого значения что может оказаться эффективным при необходимости освободить более не требующийся объект ссылка на который хранится в долгоживущем объекте Это однако не значит что объект заменённый значением будет непременно и немедленно удалён но есть гарантия что этот объект будет удалён именно в будущем Данный приём всего лишь устраняет ссылку на объект то есть отвязывает указатель от объекта в памяти При этом следует учитывать что объект не будет удалён сборщиком мусора пока на него указывает хотя бы одна ссылка из используемых переменных или объектов Существуют также методы для инициации принудительной сборки мусора но не гарантируется что они будут вызваны исполняющей средой и их не рекомендуется использовать для обычной работы
Классы и функции править править код
не является процедурным языком любая функция может существовать только внутри класса Это подчёркивает терминология языка где нет понятий функция или функция член англ а только метод В методы превратились и стандартные функции Например в нет функции а есть метод класса содержащего кроме методы и многие другие Конструкторы в не считаются методами Деструкторов в не существует а метод ни в коем случае нельзя считать аналогом деструктора
Конструкторы править править код
Конструктор это специальный метод который обязательно вызывается при создании нового объекта то есть объект экземпляр класса не может быть создан без вызова конструктора класса Не всегда удобно инициализировать все переменные класса при создании его экземпляра поэтому переменные экземпляра часто объявляют внутри тела конструктора а инициализируют как аргументы конструктора при создании экземпляра класса Иногда проще чтобы какие то значения были бы созданы по умолчанию при создании объекта В таком случае переменные объявляются и инициализируются внутри тела конструктора
Конструктор инициализирует объект непосредственно во время создания Имя конструктора совпадает с именем класса включая регистр а по синтаксису конструктор похож на метод без возвращаемого значения так выглядит метод по имени
так выглядит конструктор класса
В отличие от метода конструктор никогда ничего не возвращает
Конструктор определяет действия выполняемые при создании объекта класса и является важной частью класса Как правило программисты стараются явно указать конструктор Если явного конструктора нет то автоматически создаст его пустым для использования по умолчанию
В качестве примера можно рассмотреть некий класс представляющий собой описание коробки Конструктор класса просто установит начальные размеры для коробки
ширина коробки
высота коробки
глубина коробки
Конструктор
вычисляем объём коробки
Статические методы и поля править править код
В как и в используются статические поля и статические методы англ в теории программирования их также называют методами класса которые задаются при помощи ключевого слова Статические поля переменные класса имеют тот же смысл что и в каждое такое поле является собственностью класса поэтому для доступа к статическим полям не требуется создавать экземпляры соответствующего класса
Например математические функции реализованные в классе док представляют собой как раз статические методы данного класса Поэтому их можно вызывать напрямую из класса не создавая его экземпляра например
Создание экземпляра статического класса запрещают с помощью приватного конструктора Например создание экземпляра класса приведёт к ошибке на этапе компиляции
Метода у объекта не существовало бы т к он статичный
Поскольку статические методы существуют независимо от объектов экземпляров класса они не имеют доступа к обычным не статическим полям и методам данного класса В частности при реализации статического метода недопустимо использовать идентификатор
Возможность статического импорта позволяет вызывать статические функции и константы без указания класса Пример без статического импорта
Тот же пример но со статическим импортом
Завершённость править править код
Ключевое слово финальный имеет разные значения при описании поля метода или класса
Финальное поле класса инициализируется при описании или в конструкторе класса а статическое поле в статическом блоке инициализации Впоследствии его значение не может быть изменено Если статическое поле класса или переменная проинициализированы константным выражением они рассматриваются компилятором как именованная константа в таком случае их значение может быть использовано в операторах для констант типа а также для условной компиляции для констант типа при использовании с оператором
Значения локальных переменных а также параметров метода помеченных ключевым словом не могут быть изменены после присвоения При этом их значения могут использоваться внутри анонимных классов
Метод класса отмеченный словом не может быть переопределён при наследовании
Финальный класс не может иметь наследников
Абстрактность править править код
В методы не объявленные явно как или являются виртуальными в терминологии при вызове метода по разному определённого в базовом и наследующем классах всегда производится проверка времени выполнения
Абстрактным методом модификатор в называется метод для которого заданы параметры и тип возвращаемого значения но не задано тело Абстрактный метод определяется в классах наследниках Аналог абстрактного метода в чисто виртуальная функция Для того чтобы в классе можно было описывать абстрактные методы сам класс тоже должен быть описан как абстрактный Объекты абстрактного класса создавать нельзя
Интерфейсы править править код
Высшей степенью абстрактности в является интерфейс модификатор Интерфейс содержит преимущественно абстрактные методы имеющие всеобщий уровень доступа описатели и для них даже не требуются Однако с версий и были введены возможности использования в интерфейсах
статических методов и методов по умолчанию
методов имеющих уровень доступа
Эти методы содержат тело а значит абстрактными не являются но в конкретной реализации интерфейса методы могут быть переопределены
Интерфейс в не считается классом хотя по сути является полностью абстрактным классом Класс может наследовать расширять другой класс или реализовывать интерфейс Кроме того интерфейс может наследовать расширять другой интерфейс
В класс не может наследовать более одного класса зато может реализовывать несколько интерфейсов Множественное наследование интерфейсов не запрещено то есть один интерфейс может наследоваться от нескольких
Интерфейсы можно использовать в качестве типов параметров методов Нельзя создавать экземпляры интерфейсов
Маркерные интерфейсы править править код
В есть интерфейсы которые не содержат методов для реализации а специальным образом обрабатываются
Шаблоны в править править код
Начиная с версии в языке появился механизм обобщённого программирования шаблоны внешне близкие к шаблонам С помощью специального синтаксиса в описании классов и методов можно указать параметры типы которые внутри описания могут использоваться в качестве типов полей параметров и возвращаемых значений методов
Объявление обобщённого класса
Использование обобщённого класса в коде
Допускается обобщённое объявление классов интерфейсов и методов Кроме того синтаксис поддерживает ограниченные объявления типов параметров указание в объявлении конструкции вида требует чтобы тип параметр реализовывал интерфейсы и так далее
В отличие от шаблонов шаблоны не поддерживаются средой исполнения компилятор просто создаёт байт код в котором никаких шаблонов уже нет Реализация шаблонов в принципиально отличается от реализации аналогичных механизмов в компилятор не порождает для каждого случая использования шаблона отдельный вариант класса или метода шаблона а просто создаёт одну реализацию байт кода содержащую необходимые проверки и преобразования типов Это приводит к ряду ограничений использования шаблонов в программах на
Проверка принадлежности к классу править править код
В можно явно проверить к какому классу принадлежит объект Выражение равно если объект принадлежит классу или его наследнику или реализует интерфейс или в общем виде наследует класс который реализует интерфейс который наследует
Далее функция док определённая для всех объектов выдаёт объект типа Для каждого класса создаётся не более одного описывающего его объекта типа поэтому эти объекты можно сравнивать Так например будет истинно если объекты и принадлежат к одному классу
Кроме того объект типа любого типа можно получить так
Прямое сравнение классов не всегда является оптимальным средством проверки на принадлежность к классу Зачастую вместо него используют функцию Эта функция определена у объекта типа и принимает объект типа в качестве параметра Таким образом вызов вернёт в случае если является предком класса Так как все объекты являются потомками типа вызов всегда вернёт
В паре с упомянутыми функциями объекта типа используются также функции док эквивалентно а также преобразует параметр в объект выбранного класса
Обработка ошибок править править код
Обработка ошибок в похожа на обработку ошибок в за исключением необходимости в блоке Данное отличие обусловлено тем что не может придерживаться концепции из за наличия сборщика мусора а автоматическое освобождение ресурсов в деструкторе может идти в непредсказуемом порядке через произвольные промежутки времени
Осуществляется обработка ошибок с помощью операторов и Выбрасываемая ошибка описывается объектом определённого класса наследующегося от док и соответствующего типу ошибки Внутрь блока помещается код который может выбросить исключение а блок отлавливает заданные программистом типы ошибок При этом можно указывать более одного блока для обработки различных классов ошибок или для обработки нескольких ошибок Блок является необязательным но при наличии выполняется независимо от возникновения ошибки и предназначен для освобождения выделенных в ходе работы блока ресурсов
Начиная с поддерживается интерфейс док который позволяет реализовывать классы автоматически освобождающие ресурсы Объекты подобных классов требуется создавать в круглых скобках перед блоком Простым примером автоматического освобождения ресурсом может служить чтение содержимого файла
Не указано имя файла
Открытый файл будет автоматически закрыт по ошибке
Указанный файл не найден
автоматическое закрытие ресурса
придерживается концепции обязательного указания классов ошибок которые может выбросить метод Делается это с помощью ключевого слова после описания метода Если в методе не указать класс исключения или его предка которое может быть выброшено из метода то это вызовет ошибку компиляции Концепция должна была позволить делать код самодокументируемым обозначая какие исключения может выбросить тот или иной метод но на практике редко себя оправдывает поскольку в силу разных обстоятельств программист может указать в качестве выбрасываемого исключения класс либо заключить проблемные части метода в блок для игнорирования отдельных ошибок либо в блок скрывая все возможные ошибки Недостатком концепции также является и то что программист сам должен определять и прописывать исключения которые может выбрасывать метод
Пространство имён править править код
Стиль этого раздела неэнциклопедичен или нарушает нормы литературного русского языка Статью следует исправить согласно стилистическим правилам Википедии
Основная статья Пространство имён программирование
Идея пространств имён воплощена в пакетах
Название пакета латиница нижний и верхний регистр с цифрами не первые в строке и знаком подчёркивания не первые и не последние не являющаяся инструкциями языка прим разделённая точками
Правильные примеры названий
хотя нежелательно из за нечитабельности
Неправильные примеры названий
две точки подряд
нестандартный язык не латиница
число в начале
пробел
содержит см выше
Пакеты содержат классы интерфейсы перечисления аннотации и т д имена которых латиница нижний и верхний регистр с цифрами не первые в строке Публичный класс интерфейс и т д в одном файле может быть только один Имя публичного класса интерфейса и т д в файле должно совпадать с названием файла Каждый класс имеет своё пространство имён для функций переменных и подклассов подинтерфейсов и т д причём получить подкласс класса можно с помощью а можно с помощью поэтому использование символа доллара в названии класса не рекомендуется
Примеры программ править править код
Код программы
Обобщения
Пример использования обобщений
Создание объекта по шаблону
Рефлексия
Пример использования рефлексии
Аннотации
Пример использования аннотаций
Средства разработки ПО править править код
помимо набора библиотек для платформ и содержит компилятор командной строки и набор утилит так же работающих в режиме командной строки
свободная интегрированная среда разработки для всех платформ и Пропагандируется владельцем технологии как базовое средство для разработки ПО на языке и других языках и др
свободная интегрированная среда разработки для и Пропагандируется одним из важнейших разработчиков корпоративного ПО как базовое средство для разработки ПО на языке и других языках и др
среда разработки для платформ и Разработчик компания Распространяется в двух версиях свободной бесплатной и коммерческой проприетарной
среда разработки для платформ и Разработчик компания
среда разработки программного обеспечения на языке созданная в основном для использования в обучении но также подходящая для разработки небольших программ
свободная среда разработки программного обеспечения написанная с использованием библиотеки
См также править править код
В родственных проектахЗначения в ВикисловареКниги в ВикиучебникеМедиафайлы на Викискладе
Сравнение и
Список
Примечания править править код
Комментарии править править код
Произносится на английском как в русском языке встречаются транслитерации Джава и Ява правообладатели торговой марки предпочитают первую транслитерацию
Документация править править код
Источники править править код
англ Архивировано из оригинала января Дата обращения февраля
неопр Дата обращения ноября Архивировано февраля года
с Архивировано ноября года
с чего начиналась неопр Дата обращения октября Архивировано октября года
неопр Дата обращения марта Архивировано из оригинала июня года
англ июня Дата обращения июня Архивировано августа года
МБ Архивная копия от ноября на
В провели сравнение производительности и неопр Дата обращения июня Архивировано июня года
англ Онлайн каталог альтернативных языков и языковых расширений для Дата обращения июня Архивировано августа года
неопр февраля Дата обращения ноября Архивировано февраля года
неопр января Дата обращения ноября Архивировано января года
неопр Дата обращения ноября Архивировано апреля года
неопр Дата обращения сентября Архивировано ноября года
Результаты тестов неопр Дата обращения сентября Архивировано июня года
неопр Дата обращения ноября Архивировано октября года
Архивировано из оригинала ноября Дата обращения ноября
план разработки для неопр Дата обращения июля Архивировано января года
План Б неопр Дата обращения июля Архивировано июля года
неопр Дата обращения ноября Архивировано октября года
Компания анонсировала выход Архивная копия от августа на рус
Архивная копия от августа на англ
Акторное расширение языка в среде Архивная копия от апреля на вестник ИТМО Вып
неопр Дата обращения ноября Архивировано апреля года
англ Дата обращения ноября Архивировано октября года
неопр Дата обращения мая Архивировано мая года
неопр Дата обращения мая Архивировано мая года
неопр Дата обращения июля Архивировано июля года
англ сентября Дата обращения августа Архивировано октября года
англ Дата обращения ноября Архивировано января года
англ Дата обращения сентября Архивировано сентября года
англ Дата обращения сентября Архивировано сентября года
англ Дата обращения сентября Архивировано сентября года
англ Дата обращения сентября Архивировано сентября года
англ Дата обращения сентября Архивировано сентября года
англ Дата обращения сентября Архивировано сентября года
неопр Дата обращения ноября Архивировано ноября года
неопр Дата обращения ноября Архивировано ноября года
англ Дата обращения июня Архивировано марта года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано октября года
англ Дата обращения ноября Архивировано октября года
Алексей Рагозин англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано октября года
англ Дата обращения ноября Архивировано октября года
англ Дата обращения ноября Архивировано октября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано октября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано ноября года
англ Дата обращения ноября Архивировано ноября года
неопр Дата обращения сентября Архивировано сентября года
неопр Дата обращения января Архивировано июня года
неопр Дата обращения января Архивировано января года
неопр Дата обращения января Архивировано января года
неопр Дата обращения января Архивировано января года
неопр Дата обращения января Архивировано января года
неопр Дата обращения января Архивировано января года
неопр Дата обращения января Архивировано апреля года
неопр Дата обращения января Архивировано сентября года
неопр Дата обращения января Архивировано сентября года
неопр Дата обращения января Архивировано января года
Архивировано из оригинала ноября Дата обращения ноября
англ Архивировано из оригинала ноября Дата обращения ноября
неопр Дата обращения ноября Архивировано ноября года
англ сентября Официальное заявление о программе поддержки Дата обращения октября Архивировано августа года
рус ноябрь Официальная информация об исключении из комплекта Дата обращения октября Архивировано августа года
англ сентября Обсуждение архитектуры с использованием технологий Дата обращения июня Архивировано февраля года
англ Описание технологии и возможностей как веб сервиса Дата обращения июня Архивировано августа года
англ мая Обсуждение архитектуры на платформе Дата обращения сентября Архивировано августа года
англ ноября Презентация по истории развития архитектуры Дата обращения июня Архивировано августа года
англ июня История создания системы на основе технологии Дата обращения июня Архивировано августа года
англ Стартовая страница технологии распределённого обслуживания на портале разработчиков Дата обращения июня Архивировано августа года
англ Раздел портала посвящённый технологиям в составе сервера СУБД Дата обращения июня Архивировано августа года
неопр Архивировано июня года
англ Архивировано декабря года
не имеет поддержки для переменных типа поэтому они представляются в виде значений типа Однако массивы поддерживаются Архивная копия от ноября на
англ Дата обращения ноября Архивировано ноября года
Бьярн Страуструп Язык программирования М СПб Бином Невский диалект с экз
Джеймс Гослинг Билл Джой Гай Стил Гилад Брача Алекс Бакли Даниел Смит англ Дата обращения декабря Архивировано декабря года
англ Дата обращения ноября Архивировано ноября года
с Архивировано июля года
неопр Дата обращения декабря Архивировано января года
англ Проект для мобильных разработчиков Дата обращения марта Архивировано августа года
Литература править править код
Герберт Шилдт Полное руководство е издание М Диалектика с
Кей С Хорстманн Базовый курс М Вильямс с
Кей С Хорстманн Вводный курс М Вильямс с
Фрэд Лонг Дхрув Мохиндра Роберт С Сикорд Дин Ф Сазерленд Дэвид Свобода Руководство для программиста на рекомендаций по написанию надёжных и защищённых программ М Вильямс с
Кей С Хорстманн Библиотека профессионала том Основы е издание М Вильямс с
Кей С Хорстманн Библиотека профессионала том Расширенные средства программирования е издание М Вильямс с
Барри Берд для чайников М Диалектика с
Кишори Шаран Полный обзор нововведений М ДМК Пресс с
Джеймс Гослинг Билл Джой Гай Стил Гилад Брача Алекс Бакли Язык программирования Подробное описание е издание М Вильямс с
Джошуа Блох Эффективное программирование е М Диалектика с
Бенджамин Дж Эванс Джеймс Гоф Крис Ньюленд оптимизация программ Практические методы повышения производительности приложений в М Диалектика с
Монахов Вадим Язык программирования и среда е изд СПб БХВ Петербург с
Брюс Эккель Философия е изд СПб Питер с
Ссылки править править код
англ обучающие материалы по
англ свободно распространяемые электронные версии книг Брюса Эккеля по и вместе с исходным кодом
Учебник
Официальный сайт
Ссылки на внешние ресурсы В социальных сетях
Твиттер
Тематические сайты
Словари и энциклопедии
Большая китайская
Большая норвежская
онлайн
В библиографических каталогах
Технологии
Основные сторонние технологии
История
История версий
История версий
Критика
Свободные реализации
Свойства языка
Байткод
Синтаксис
Модель памяти
Апплеты
Сервлеты
Мидлеты
Скриптовые языки
Конференции
Языки программирования
История
Хронология
Ада
Алгол
Ассемблер
Бейсик
Си
Кобол
Форт
Фортран
Лисп
Оберон
Паскаль
Категория
Списки хронологический
по категориям
Источник
Категории Языки программирования по алфавитуЯзыки программирования появившиеся в веб программированияЯзыки программирования с автоматическим управлением памятьюСкрытые категории Страницы использующие устаревший тег не указан язык Википедия заменить архив Страницы использующие волшебные ссылки Статьи с вики разметкой в изображении карточкиВикипедия Статьи с источниками из ВикиданныхПРО ИТ Статьи по алфавитуПРО ИТ Последняя правка в текущем годуВикипедия Статьи с нарушением взвешенности изложенияВикипедия Статьи с шаблонами недостатков по алфавитуВикипедия Страницы с шаблоном без дополнительного текстаВикипедия Стилистически некорректные статьиСтатьи со ссылками на ВикисловарьСтатьи со ссылками на ВикиучебникСтатьи со ссылками на Викисклад
Навигация
Персональные инструменты
Вы не представились системеОбсуждениеВкладСоздать учётную записьВойти
Пространства имён
СтатьяОбсуждение
русский
Просмотры
ЧитатьТекущая версияПравитьПравить кодИстория
Ещё
Поиск
Навигация
Заглавная страницаСодержаниеИзбранные статьиСлучайная статьяТекущие событияПожертвовать
Участие
Сообщить об ошибкеКак править статьиСообществоФорумСвежие правкиНовые страницыСправка
Инструменты
Ссылки сюдаСвязанные правкиСлужебные страницыПостоянная ссылкаСведения о страницеЦитировать страницуПолучить короткий кодЭлемент Викиданных
Печать экспорт
Скачать как для печати
В других проектах
ВикискладВикиучебникВикиновости
На других языках
Саха
Править ссылки
Эта страница в последний раз была отредактирована февраля в
Текст доступен по лицензии С указанием авторства С сохранением условий в отдельных случаях могут действовать дополнительные условия
Подробнее см Условия использования
зарегистрированный товарный знак некоммерческой организации Фонд Викимедиа
Политика конфиденциальности
Описание Википедии
Отказ от ответственности
Свяжитесь с нами
Кодекс поведения
Разработчики
Статистика
Заявление о куки
Мобильная версия